version: 2

models:
  - name: stg_customers
    meta:
      owner: "Idan"
    config:
      tags: ["staging", "PII"]
    columns:
      - name: customer_id
        tests:
          - unique:
              config:
                severity: warn
          - relationships:
              to: ref('stg_signups')
              field: customer_id

  - name: stg_orders
    meta:
      owner: "Idan"
    config:
      tags: ["staging", "finance", "sales"]
      elementary:
        timestamp_column: "order_date"
    tests:
      - elementary.volume_anomalies
    columns:
      - name: order_id
        tests:
          - unique:
              config:
                severity: warn
      - name: status
        tests:
          - accepted_values:
              config:
                severity: warn
              values: ["placed", "shipped", "completed", "return_pending", "returned"]
          - dbt_expectations.expect_column_values_to_be_in_set:
              value_set: ["placed", "shipped", "completed", "return_pending", "returned"]
              quote_values: true

  - name: stg_payments
    meta:
      owner: "Idan"
    config:
      tags: ["staging", "finance"]
    columns:
      - name: payment_id
        tests:
          - unique:
              config:
                severity: warn
          - elementary.column_anomalies:
              column_anomalies: # Optional, A list of column monitors for anomaly detection. by default all monitors except for `sum` are executed.
                - sum
              timestamp_column: created_at # Optional, The timestamp column to use in order to split the data into time buckets.
              where_expression: id is not null # Optional, SQL expression to filter the data.
              anomaly_sensitivity: 3 # Optional, The sensitivity level for anomaly detection.
              anomaly_direction: both # Optional, The direction of anomalies to detect.
              detection_period: # Optional, The period for anomaly detection.
                period: day
                count: 2
              training_period: # Optional, The period for model training.
                period: day
                count: 14
              time_bucket: # Optional, The period for time bucketing.
                period: day
                count: 1
              seasonality: day_of_week # Optional, The seasonality of the data (omit for no seasonality).
              detection_delay: # Optional, The period for detection delay.
                period: day
                count: 0
              ignore_small_changes: # Optional
                spike_failure_percent_threshold: 0 # Optional, Threshold for spike anomaly failure.
                drop_failure_percent_threshold: 0 # Optional, Threshold for drop anomaly failure.
              anomaly_exclude_metrics: metric_date != '2021-01-01' # Optional, SQL where expression on fields metric_date / metric_time_bucket / metric_value
      - name: payment_method
        tests:
          - accepted_values:
              config:
                severity: warn
              values: ["credit_card", "coupon", "bank_transfer", "gift_card"]

      - name: order_id
        tests:
          - elementary.column_anomalies:
              column_anomalies: # Optional, A list of column monitors for anomaly detection. by default all monitors except for `sum` are executed.
                - sum
              timestamp_column: created_at # Optional, The timestamp column to use in order to split the data into time buckets.
              where_expression: id is not null # Optional, SQL expression to filter the data.
              anomaly_sensitivity: 3 # Optional, The sensitivity level for anomaly detection.
              anomaly_direction: both # Optional, The direction of anomalies to detect.
              detection_period: # Optional, The period for anomaly detection.
                period: day
                count: 2
              training_period: # Optional, The period for model training.
                period: day
                count: 14
              time_bucket: # Optional, The period for time bucketing.
                period: day
                count: 1
              seasonality: day_of_week # Optional, The seasonality of the data (omit for no seasonality).
              detection_delay: # Optional, The period for detection delay.
                period: day
                count: 0
              ignore_small_changes: # Optional
                spike_failure_percent_threshold: 0 # Optional, Threshold for spike anomaly failure.
                drop_failure_percent_threshold: 0 # Optional, Threshold for drop anomaly failure.
              anomaly_exclude_metrics: metric_date != '2021-01-01' # Optional, SQL where expression on fields metric_date / metric_time_bucket / metric_value
  - name: stg_signups
    meta:
      owner: "Idan"
    config:
      tags: ["staging", "PII"]
      elementary:
        timestamp_column: "signup_date"
    columns:
      - name: signup_id
        tests:
          - unique:
              config:
                severity: warn
      - name: customer_email
        tests:
          - unique
          - elementary.column_anomalies:
              sensitivity: 2
              config:
                severity: warn
              column_anomalies:
                - missing_count
